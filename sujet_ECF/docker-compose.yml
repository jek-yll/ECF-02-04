version: '3.8'

services:
  mysql:
    image: mysql:latest
    container_name: mysql
    ports:
      - "${DB_PORT}:3306"
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      #MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_ROOT_PASSWORD}

    volumes:
      - mysql_data:/var/lib/mysql
    networks: 
      - ecf-network
    restart: always

  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "${REDIS_PORT}:6379"
    restart: always
    networks: 
      - ecf-network
    depends_on:
      - mysql

  authentication-service:
    build:
      context: ./server/authentication-service
      dockerfile: dockerfile
    ports:
      - "${AUTHENTICATION_SERVICE_PORT}:7000"
    environment:
      PORT: 7000
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}

    networks: 
      - ecf-network
    restart: always
    depends_on:
      - mysql
      - redis

  payment-service:
    build:
      context: ./server/payment-service
      dockerfile: dockerfile
    ports:
      - "${PAYMENT_SERVICE_PORT}:9050"
    environment:
      PORT: 9050
      DB_HOST: mysql
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}

    networks: 
      - ecf-network
    restart: always
    depends_on:
      - mysql
      - redis

  common-data-service:
    build:
      context: ./server/common-data-service
      dockerfile: dockerfile
    ports:
      - "${COMMON_DATA_SERVICE_PORT}:9000"
    environment:
      PORT: 9000 
      DB_HOST: mysql
      DB_PORT: ${DB_PORT}
      DB_SCHEMA: ${DB_SCHEMA}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_HOST: redis
      REDIS_PORT: ${REDIS_PORT}
      DB_USER: ${DB_USER}
      DB_PASS: ${DB_PASS}
      ACTIVE_PROFILE: ${ACTIVE_PROFILE}

    networks: 
      - ecf-network
    restart: always
    depends_on:
      - mysql
      - redis

  react-app:
    build:
      context: ./client
      dockerfile: dockerfile
    ports:
      - "${REACT_APP_PORT}:80"
    environment:
      REACT_CLIENT_URL: ${REACT_CLIENT_URL}
      REACT_APP_ENVIRONMENT: ${REACT_APP_ENVIRONMENT}
      
    networks: 
      - ecf-network

networks:
  ecf-network:
    driver: bridge

volumes:
  mysql_data:
